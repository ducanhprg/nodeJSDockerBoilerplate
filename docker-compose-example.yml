services:
  pl_request_handler:
    build:
      context: ./sources
      dockerfile: ../configs/Dockerfile
      args:
        SERVICE_PATH: ${PL_REQUEST_HANDLER_BASE}
    container_name: ${PL_REQUEST_HANDLER_NAME}
    ports:
      - "${PL_REQUEST_HANDLER_PORT}:3000"
    volumes:
      - ./sources/${PL_REQUEST_HANDLER_BASE}:/usr/src/app
      - ./sources/bsCommonLibrary:/usr/src/bsCommonLibrary
    command: npm run dev
    networks:
      - docker-network

  # Validator
  bs_validator:
    build:
      context: ./sources
      dockerfile: ../configs/Dockerfile
      args:
        SERVICE_PATH: ${BS_VALIDATOR_BASE}
    container_name: ${BS_VALIDATOR_NAME}
    ports:
      - "${BS_VALIDATOR_PORT}:3000"
    volumes:
      - ./sources/${BS_VALIDATOR_BASE}:/usr/src/app
      - ./sources/bsCommonLibrary:/usr/src/bsCommonLibrary
    command: ["pm2-runtime", "start", "process.json"]
    networks:
      - docker-network

  # Vendors
  vendor_gde:
    build:
      context: ./sources
      dockerfile: ../configs/Dockerfile
      args:
        SERVICE_PATH: ${VENDOR_GDE_BASE}
    container_name: ${VENDOR_GDE_NAME}
    ports:
      - "${VENDOR_GDE_PORT}:3000"
    volumes:
      - ./sources/${VENDOR_GDE_BASE}:/usr/src/app
      - ./sources/bsCommonLibrary:/usr/src/bsCommonLibrary
    command: ["pm2-runtime", "start", "process.json"]
    networks:
      - docker-network

networks:
  docker-network:
    name: ${GLOBAL_NETWORK_NAME}
    external: true